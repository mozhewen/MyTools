(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     30626,        697]
NotebookOptionsPosition[     27139,        633]
NotebookOutlinePosition[     27579,        650]
CellTagsIndexPosition[     27536,        647]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.838769668593506*^9, 3.838769669146641*^9}, {
  3.838770369764653*^9, 3.838770370300315*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"b3da783f-cf60-456a-a8fc-ab53b84796df"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "EncodeIntoYAML", "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "EncodeIntoYAML", "]"}], " ", "=", " ", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{"\"\<Type\>\"", " ", "->", " ", "Automatic"}], 
     RowBox[{"(*", 
      RowBox[{"\"\<Block\>\"", " ", "|", " ", "\"\<Inline\>\""}], "*)"}], 
     "\n", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"EncodeIntoYAML", "[", 
   RowBox[{"expr_", ",", " ", 
    RowBox[{"op", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"EncodeIntoYAML", "[", 
   RowBox[{"expr", ",", " ", "0", ",", " ", "op"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EncodeIntoYAML", "[", 
    RowBox[{"expr_", ",", " ", "indent_", ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", "\n", 
   "\t", 
   RowBox[{"First", "@", 
    RowBox[{"EncodeIntoYAMLInternal", "[", 
     RowBox[{"expr", ",", " ", "indent", ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<Type\>\"", "]"}]}], "]"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AutoInlineQ", "[", "expr_", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Depth", "[", "expr", "]"}], " ", "<=", " ", "2"}], " ", "||", 
     " ", 
     RowBox[{
      RowBox[{"LeafCount", "[", "expr", "]"}], " ", "<=", " ", "5"}]}], 
    ")"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EncodeIntoYAMLInternal", "[", 
    RowBox[{"list_List", ",", " ", 
     RowBox[{"indent_", ":", "0"}], ",", " ", "type_"}], "]"}], " ", ":=", 
   " ", "\n", "\t", 
   RowBox[{"Switch", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"type", " ", "===", " ", "Automatic"}], " ", "&&", " ", 
        RowBox[{"AutoInlineQ", "[", "list", "]"}]}], ",", " ", 
       "\"\<Inline\>\"", ",", " ", "type"}], "]"}], ",", "\n", "\t\t", 
     "\"\<Inline\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"First", "@", 
            RowBox[{"EncodeIntoYAMLInternal", "[", 
             RowBox[{"#", ",", " ", "\"\<Inline\>\""}], "]"}]}], "&"}], " ", "/@",
           " ", "list"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<[\>\"", ",", " ", "\"\<, \>\"", ",", " ", "\"\<]\>\""}], 
          "}"}]}], "]"}], ",", " ", "\"\<Inline\>\""}], "}"}], ",", "\n", 
     "\t\t", "_", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"StringRiffle", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"First", "@", 
            RowBox[{"EncodeIntoYAMLInternal", "[", 
             RowBox[{"#", ",", " ", 
              RowBox[{"indent", "+", "2"}], ",", " ", "type"}], "]"}]}], 
           "&"}], " ", "/@", " ", "list"}], ",", "\n", "\t\t\t", 
         RowBox[{"{", 
          RowBox[{"\"\<- \>\"", ",", " ", 
           RowBox[{"\"\<\\n\>\"", "<>", 
            RowBox[{"StringRepeat", "[", 
             RowBox[{"\"\< \>\"", ",", " ", "indent"}], "]"}], "<>", 
            "\"\<- \>\""}], ",", " ", "\"\<\>\""}], "}"}]}], "\n", "\t\t", 
        "]"}], ",", " ", "\"\<Block\>\""}], "}"}]}], "\n", "\t", "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EncodeIntoYAMLInternal", "[", 
    RowBox[{"ass_Association", ",", " ", 
     RowBox[{"indent_", ":", "0"}], ",", " ", "type_"}], "]"}], " ", ":=", 
   " ", "\n", "\t", 
   RowBox[{"Switch", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"type", " ", "===", " ", "Automatic"}], " ", "&&", " ", 
        RowBox[{"AutoInlineQ", "[", "ass", "]"}]}], ",", " ", 
       "\"\<Inline\>\"", ",", " ", "type"}], "]"}], ",", "\n", "\t\t", 
     "\"\<Inline\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"StringRiffle", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"KeyValueMap", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"StringTemplate", "[", "\"\<``: ``\>\"", "]"}], "[", 
             "\n", "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"First", "@", 
               RowBox[{"EncodeIntoYAMLInternal", "[", 
                RowBox[{"#1", ",", " ", "\"\<Inline\>\""}], "]"}]}], ",", 
              "\n", "\t\t\t\t\t", 
              RowBox[{"First", "@", 
               RowBox[{"EncodeIntoYAMLInternal", "[", 
                RowBox[{"#2", ",", " ", "\"\<Inline\>\""}], "]"}]}]}], "\n", 
             "\t\t\t\t", "]"}], "&"}], ",", "\n", "\t\t\t\t", "ass"}], "\n", 
          "\t\t\t", "]"}], ",", "\n", "\t\t\t", 
         RowBox[{"{", 
          RowBox[{
          "\"\<{\>\"", ",", " ", "\"\<, \>\"", ",", " ", "\"\<}\>\""}], 
          "}"}]}], "\n", "\t\t", "]"}], ",", " ", "\"\<Inline\>\""}], "}"}], 
     ",", "\n", "\t\t", "_", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"StringRiffle", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"KeyValueMap", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{"key", " ", "=", " ", 
                 RowBox[{"EncodeIntoYAMLInternal", "[", 
                  RowBox[{"#1", ",", " ", 
                   RowBox[{"indent", "+", "2"}], ",", " ", "type"}], "]"}]}], 
                ",", "\n", "\t\t\t\t\t", 
                RowBox[{"value", " ", "=", " ", 
                 RowBox[{"EncodeIntoYAMLInternal", "[", 
                  RowBox[{"#2", ",", " ", 
                   RowBox[{"indent", "+", "2"}], ",", " ", "type"}], 
                  "]"}]}]}], "\n", "\t\t\t\t", "}"}], ",", " ", "\n", 
              "\t\t\t\t\t", 
              RowBox[{"Switch", "[", 
               RowBox[{
                RowBox[{"Last", "[", "key", "]"}], ",", "\n", "\t\t\t\t\t\t", 
                "\"\<Inline\>\"", ",", " ", 
                RowBox[{
                 RowBox[{"StringTemplate", "[", "\"\<``: ``\>\"", "]"}], "[", 
                 "\n", "\t\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"First", "[", "key", "]"}], ",", " ", "\n", 
                  "\t\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"Switch", "[", 
                    RowBox[{
                    RowBox[{"Last", "[", "value", "]"}], ",", " ", "\n", 
                    "\t\t\t\t\t\t\t\t", "\"\<Inline\>\"", ",", " ", 
                    "\"\<\>\"", ",", " ", "\n", "\t\t\t\t\t\t\t\t", 
                    "\"\<Block\>\"", ",", " ", 
                    RowBox[{"\"\<\\n\>\"", "<>", 
                    RowBox[{"StringRepeat", "[", 
                    RowBox[{"\"\< \>\"", ",", " ", 
                    RowBox[{"indent", "+", "2"}]}], "]"}]}]}], "\n", 
                    "\t\t\t\t\t\t\t", "]"}], " ", "<>", " ", 
                   RowBox[{"First", "[", "value", "]"}]}]}], "\n", 
                 "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t\t", 
                "\"\<Block\>\"", ",", " ", 
                RowBox[{"\"\<? \>\"", " ", "<>", " ", 
                 RowBox[{"First", "[", "key", "]"}], " ", "<>", " ", 
                 "\"\<\\n\>\"", " ", "<>", " ", 
                 RowBox[{"StringRepeat", "[", 
                  RowBox[{"\"\< \>\"", ",", " ", "indent"}], "]"}], "<>", 
                 "\"\<: \>\"", " ", "<>", " ", 
                 RowBox[{"First", "[", "value", "]"}]}]}], "\n", "\t\t\t\t\t",
                "]"}]}], "\n", "\t\t\t\t", "]"}], "&"}], ",", "\n", 
           "\t\t\t\t", "ass"}], "\n", "\t\t\t", "]"}], ",", "\n", "\t\t\t", 
         RowBox[{"{", 
          RowBox[{"\"\<\>\"", ",", " ", 
           RowBox[{"\"\<\\n\>\"", "<>", 
            RowBox[{"StringPadLeft", "[", 
             RowBox[{"\"\<\>\"", ",", " ", "indent"}], "]"}]}], ",", " ", 
           "\"\<\>\""}], "}"}]}], "\n", "\t\t", "]"}], ",", " ", 
       "\"\<Block\>\""}], "}"}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"EncodeIntoYAMLInternal", "[", 
   RowBox[{"expr_", ",", " ", 
    RowBox[{"indent_", ":", "0"}], ",", " ", "type_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"TextString", "[", "expr", "]"}], ",", " ", "\"\<Inline\>\""}], 
   "}"}]}]}], "Code",
 CellChangeTimes->{{3.855717772708297*^9, 3.855717775768927*^9}, {
   3.85571788942339*^9, 3.855717907986188*^9}, {3.855717969742199*^9, 
   3.8557179927050037`*^9}, {3.8557180831389647`*^9, 3.855718097219481*^9}, {
   3.8557183115825863`*^9, 3.855718485694573*^9}, {3.855718535718316*^9, 
   3.855718643587141*^9}, {3.855718777848837*^9, 3.855718795920926*^9}, {
   3.855718851676977*^9, 3.8557188694446507`*^9}, {3.8557188995773907`*^9, 
   3.855718902375593*^9}, {3.85571900982796*^9, 3.85571903218307*^9}, {
   3.855719322002408*^9, 3.8557193252968063`*^9}, {3.855719359351461*^9, 
   3.85571937178963*^9}, {3.8557196221968946`*^9, 3.85571964070896*^9}, {
   3.8557198130999823`*^9, 3.855719823457835*^9}, {3.855719884096312*^9, 
   3.8557199616483383`*^9}, {3.855720018747943*^9, 3.855720061208343*^9}, {
   3.855720098630082*^9, 3.85572015909709*^9}, {3.85572020135336*^9, 
   3.855720201512966*^9}, {3.855720278184984*^9, 3.855720408169174*^9}, {
   3.855720492507986*^9, 3.855720531993699*^9}, {3.855720655947114*^9, 
   3.8557207307352552`*^9}, {3.855720770253336*^9, 3.855720778098933*^9}, {
   3.8557208876271877`*^9, 3.8557212105168753`*^9}, {3.855721370967656*^9, 
   3.855721609065093*^9}, {3.855721645566534*^9, 3.855721669159759*^9}, {
   3.855721716019781*^9, 3.855721721083962*^9}, {3.8557218083815002`*^9, 
   3.855721865367404*^9}, {3.8557218966021833`*^9, 3.8557219363621407`*^9}, {
   3.855721977466881*^9, 3.855721986833352*^9}, 3.855730759311162*^9, {
   3.85573093496075*^9, 3.85573104209457*^9}, {3.855731088864326*^9, 
   3.855731145955056*^9}, {3.8557311939209642`*^9, 3.855731215974951*^9}, {
   3.855731323657299*^9, 3.8557313447428637`*^9}, {3.8557313792429*^9, 
   3.855731443516176*^9}, 3.8557318486717577`*^9, {3.855731890501307*^9, 
   3.855731893010809*^9}, {3.855732147786545*^9, 3.8557321517424393`*^9}, {
   3.8557327710291443`*^9, 3.855732878018046*^9}, {3.855733010733988*^9, 
   3.8557331149342546`*^9}, {3.855733149628893*^9, 3.8557333921232862`*^9}, {
   3.855733430759837*^9, 3.855733470312641*^9}, {3.855733522264036*^9, 
   3.855733576662715*^9}, {3.8557336997668667`*^9, 3.8557337049345827`*^9}, {
   3.855733782611417*^9, 3.855733837825871*^9}, {3.855733898185287*^9, 
   3.855733918141362*^9}, {3.855734116023913*^9, 3.8557341678775473`*^9}, {
   3.855734269204742*^9, 3.855734275047386*^9}, {3.8557343079572077`*^9, 
   3.855734379791459*^9}, {3.8557344801423197`*^9, 3.8557345314512987`*^9}, {
   3.855734826605575*^9, 3.8557348312125597`*^9}, {3.8557348697207537`*^9, 
   3.8557349059203453`*^9}, {3.855735594724803*^9, 3.855735651032209*^9}, {
   3.855735707703327*^9, 3.8557357079942417`*^9}, {3.8557357446029243`*^9, 
   3.855735817137838*^9}, {3.855735933546668*^9, 3.855735983339163*^9}, {
   3.855736102051525*^9, 3.8557362045134068`*^9}, 3.855736249361058*^9, {
   3.855736297468557*^9, 3.8557363752450666`*^9}, {3.8557364106170607`*^9, 
   3.855736412076476*^9}, {3.855736444922332*^9, 3.855736500492548*^9}, {
   3.8557365331507177`*^9, 3.855736686528063*^9}, {3.855736799847786*^9, 
   3.855736850791231*^9}, {3.8557368972055798`*^9, 3.8557370157938967`*^9}, {
   3.8557370825734987`*^9, 3.855737089696624*^9}, 3.855737203485848*^9, 
   3.8557374779491253`*^9, 3.8557375989817047`*^9, {3.855737911731577*^9, 
   3.855737913012199*^9}, {3.8557379470343323`*^9, 3.855737954481447*^9}, {
   3.855738162272428*^9, 3.8557382074906693`*^9}, {3.855743265330265*^9, 
   3.8557432666279297`*^9}},ExpressionUUID->"ab779459-83dc-4893-8add-\
151822e21788"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"testcase", "[", "1", "]"}], "=", 
  RowBox[{"<|", "\[IndentingNewLine]", 
   RowBox[{"\"\<a\>\"", "->", "\"\<b\>\""}], "\[IndentingNewLine]", 
   "|>"}]}]], "Input",
 CellChangeTimes->{{3.855732368997074*^9, 3.855732418157805*^9}, {
  3.855732452714492*^9, 3.855732475567123*^9}, {3.8557325488973007`*^9, 
  3.85573262866367*^9}, {3.85573760775585*^9, 3.855737633304655*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"fc2c58d2-5832-4f31-a748-21f0c5f3c2ed"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"b\"\>"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8557326024276743`*^9, 3.8557326291177197`*^9}, 
   3.8557370921702642`*^9, 3.8557372059108467`*^9, 3.85573748056367*^9, {
   3.8557376241276093`*^9, 3.855737633649479*^9}, {3.855738197802058*^9, 
   3.8557382654501762`*^9}},
 CellLabel->"Out[79]=",ExpressionUUID->"7b784166-43f5-4f74-a289-5220dfcdaf23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EncodeIntoYAML", "[", 
  RowBox[{"testcase", "[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EncodeIntoYAML", "[", 
  RowBox[{
   RowBox[{"testcase", "[", "1", "]"}], ",", 
   RowBox[{"\"\<Type\>\"", "->", "\"\<Block\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.855732235153357*^9, 3.855732235653564*^9}, {
   3.855732358493843*^9, 3.8557323606340446`*^9}, {3.855732631531892*^9, 
   3.855732632123398*^9}, {3.85573722407327*^9, 3.8557372300497303`*^9}, 
   3.8557374847144203`*^9, {3.855737525604848*^9, 3.855737539928335*^9}, {
   3.8557376380602503`*^9, 3.855737660729208*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"8f747bc6-664f-4669-b780-dd7e1c535ca9"],

Cell[BoxData["\<\"{a: b}\"\>"], "Output",
 CellChangeTimes->{
  3.85573263250097*^9, 3.8557370936074867`*^9, {3.855737207208954*^9, 
   3.855737230260077*^9}, {3.855737482316597*^9, 3.855737485037754*^9}, {
   3.8557375267345247`*^9, 3.855737540605077*^9}, {3.855737639632966*^9, 
   3.855737661354154*^9}, 3.855737917638232*^9, 3.855737957078806*^9, {
   3.855738199592238*^9, 3.855738211768284*^9}, 3.85573826673664*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"5b928902-6d97-4bec-a395-ff42cce26c52"],

Cell[BoxData["\<\"a: b\"\>"], "Output",
 CellChangeTimes->{
  3.85573263250097*^9, 3.8557370936074867`*^9, {3.855737207208954*^9, 
   3.855737230260077*^9}, {3.855737482316597*^9, 3.855737485037754*^9}, {
   3.8557375267345247`*^9, 3.855737540605077*^9}, {3.855737639632966*^9, 
   3.855737661354154*^9}, 3.855737917638232*^9, 3.855737957078806*^9, {
   3.855738199592238*^9, 3.855738211768284*^9}, 3.8557382667374983`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"12b1c7cf-ff2d-4b71-8208-9776fa57dffc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"testcase", "[", "2", "]"}], "=", 
  RowBox[{"<|", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<a\>\"", "->", "\"\<b\>\""}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<c\>\"", "->", "\"\<d\>\""}]}], "\[IndentingNewLine]", 
   "|>"}]}]], "Input",
 CellChangeTimes->{{3.855738232523654*^9, 3.855738239395729*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"18774c29-0fb4-427b-bab5-12d08badc568"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"b\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"d\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.855738264124447*^9, 3.855738267792225*^9}},
 CellLabel->"Out[82]=",ExpressionUUID->"5295ab24-c195-4a90-aba9-74bbaf5ff4da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EncodeIntoYAML", "[", 
  RowBox[{"testcase", "[", "2", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EncodeIntoYAML", "[", 
  RowBox[{
   RowBox[{"testcase", "[", "2", "]"}], ",", 
   RowBox[{"\"\<Type\>\"", "->", "\"\<Block\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8557382460902433`*^9, 3.855738249953987*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"b2a95797-d28e-4aa9-b384-ed85fb9eed7a"],

Cell[BoxData["\<\"{a: b, c: d}\"\>"], "Output",
 CellChangeTimes->{{3.8557382505442553`*^9, 3.855738268941099*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"7dfa364a-3e32-4091-9bba-eaa1e4ba2e05"],

Cell[BoxData["\<\"a: b\\nc: d\"\>"], "Output",
 CellChangeTimes->{{3.8557382505442553`*^9, 3.855738268942398*^9}},
 CellLabel->"Out[84]=",ExpressionUUID->"b12a1b52-fe27-4ed1-aab2-87ed3d687a34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"testcase", "[", "3", "]"}], "=", 
  RowBox[{"<|", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<a\>\"", "->", "\"\<b\>\""}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<c\>\"", "->", "\"\<d\>\""}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<e\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "\[IndentingNewLine]", 
   "|>"}]}]], "Input",
 CellChangeTimes->{{3.85573827590569*^9, 3.8557382918629704`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"1ccc8895-995b-4c67-99ce-4a0acd8e9a9e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"b\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"d\"\>"}], ",", 
   RowBox[{"\<\"e\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8557382930046797`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"4d787821-874d-4dbb-8259-664600f21427"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EncodeIntoYAML", "[", 
  RowBox[{"testcase", "[", "3", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EncodeIntoYAML", "[", 
  RowBox[{
   RowBox[{"testcase", "[", "3", "]"}], ",", 
   RowBox[{"\"\<Type\>\"", "->", "\"\<Inline\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"EncodeIntoYAML", "[", 
  RowBox[{
   RowBox[{"testcase", "[", "3", "]"}], ",", 
   RowBox[{"\"\<Type\>\"", "->", "\"\<Block\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.855738297623485*^9, 3.855738298459675*^9}, {
  3.855738373354897*^9, 3.855738376683195*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"e6df4e98-899d-4099-ad66-bf8068b4208d"],

Cell[BoxData["\<\"a: b\\nc: d\\ne: [1, 2, 3]\"\>"], "Output",
 CellChangeTimes->{3.855738299081842*^9, 3.855738377370516*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"d4d63358-9321-4f42-8163-8b3cafb0aa8d"],

Cell[BoxData["\<\"{a: b, c: d, e: [1, 2, 3]}\"\>"], "Output",
 CellChangeTimes->{3.855738299081842*^9, 3.855738377371611*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"e935030f-a4ea-460f-b332-036971279b63"],

Cell[BoxData["\<\"a: b\\nc: d\\ne: \\n  - 1\\n  - 2\\n  - 3\"\>"], "Output",
 CellChangeTimes->{3.855738299081842*^9, 3.85573837737261*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"4fb0dfcc-4fe4-4bb9-a2ce-106755903281"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"testcase", "[", "4", "]"}], "=", 
  RowBox[{"<|", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<a\>\"", "->", "\"\<b\>\""}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<c\>\"", "->", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<inner1\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Haha\>\"", ",", "\"\<Hoho\>\""}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<This\>\"", ",", "\"\<is\>\"", ",", "\"\<a\>\"", ",", 
          "\"\<complex\>\"", ",", "\"\<one\>\""}], "}"}], "->", 
        RowBox[{"{", 
         RowBox[{"\"\<rhs\>\"", ",", "\"\<result\>\""}], "}"}]}]}], "|>"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<e\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "\[IndentingNewLine]", 
   "|>"}]}]], "Input",
 CellChangeTimes->{{3.85573827590569*^9, 3.8557382918629704`*^9}, {
  3.855738403932708*^9, 3.8557385043556023`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"8b4595bb-97fe-446e-80e6-9089cf6fbf15"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"b\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"inner1\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"Haha\"\>", ",", "\<\"Hoho\"\>"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"This\"\>", ",", "\<\"is\"\>", ",", "\<\"a\"\>", 
         ",", "\<\"complex\"\>", ",", "\<\"one\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"rhs\"\>", ",", "\<\"result\"\>"}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"e\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8557385006523533`*^9, 3.855738504940675*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"3be51759-2a3b-478a-ac29-c243a7119df4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EncodeIntoYAML", "[", 
  RowBox[{"testcase", "[", "4", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EncodeIntoYAML", "[", 
  RowBox[{
   RowBox[{"testcase", "[", "4", "]"}], ",", 
   RowBox[{"\"\<Type\>\"", "->", "\"\<Inline\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"EncodeIntoYAML", "[", 
  RowBox[{
   RowBox[{"testcase", "[", "4", "]"}], ",", 
   RowBox[{"\"\<Type\>\"", "->", "\"\<Block\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.855738511188457*^9, 3.855738513578144*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"f36c52f2-10bf-46bb-88be-5d80bcbd36c8"],

Cell[BoxData["\<\"a: b\\nc: \\n  inner1: [Haha, Hoho]\\n  [This, is, a, \
complex, one]: [rhs, result]\\ne: [1, 2, 3]\"\>"], "Output",
 CellChangeTimes->{3.855738514407419*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"aa798f6d-63d1-4bf2-afe1-723bba565279"],

Cell[BoxData["\<\"{a: b, c: {inner1: [Haha, Hoho], [This, is, a, complex, \
one]: [rhs, result]}, e: [1, 2, 3]}\"\>"], "Output",
 CellChangeTimes->{3.8557385144085903`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"c601afea-246e-4fd4-8cce-1bff40d699ab"],

Cell[BoxData["\<\"a: b\\nc: \\n  inner1: \\n    - Haha\\n    - Hoho\\n  ? - \
This\\n    - is\\n    - a\\n    - complex\\n    - one\\n  : - rhs\\n    - \
result\\ne: \\n  - 1\\n  - 2\\n  - 3\"\>"], "Output",
 CellChangeTimes->{3.8557385144096127`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"70e36d4e-c05f-4c65-8be0-d1e3c164a3a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"testcase", "[", "5", "]"}], "=", 
  RowBox[{"<|", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<a\>\"", "->", "\"\<b\>\""}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<c\>\"", "->", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<inner1\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Haha\>\"", ",", "\"\<Hoho\>\""}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<This\>\"", ",", "\"\<is\>\"", ",", "\"\<a\>\"", ",", 
          "\"\<complex\>\"", ",", "\"\<one\>\""}], "}"}], "->", 
        RowBox[{"{", 
         RowBox[{"\"\<rhs\>\"", ",", "\"\<result\>\""}], "}"}]}]}], "|>"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<e\>\"", "->", "4"}], ",", 
       RowBox[{"\"\<fg\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"123", ",", "456", ",", "\"\<das\>\""}], "}"}]}]}], "|>"}], "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "\[IndentingNewLine]", 
   "|>"}]}]], "Input",
 CellChangeTimes->{{3.855743151007028*^9, 3.855743177169774*^9}, {
  3.855743313135212*^9, 3.855743315594462*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"ca86817f-0ebd-4b12-8759-e6b79d5c68ed"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"b\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"inner1\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"Haha\"\>", ",", "\<\"Hoho\"\>"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"This\"\>", ",", "\<\"is\"\>", ",", "\<\"a\"\>", 
         ",", "\<\"complex\"\>", ",", "\<\"one\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"rhs\"\>", ",", "\<\"result\"\>"}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"e\"\>", "\[Rule]", "4"}], ",", 
      RowBox[{"\<\"fg\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"123", ",", "456", ",", "\<\"das\"\>"}], "}"}]}]}], 
     "\[RightAssociation]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.855743180115769*^9, 3.855743316316409*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6742a279-7abb-4cc7-99c5-2bf524eb4081"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EncodeIntoYAML", "[", 
  RowBox[{"testcase", "[", "5", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EncodeIntoYAML", "[", 
  RowBox[{
   RowBox[{"testcase", "[", "5", "]"}], ",", 
   RowBox[{"\"\<Type\>\"", "->", "\"\<Inline\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"EncodeIntoYAML", "[", 
  RowBox[{
   RowBox[{"testcase", "[", "5", "]"}], ",", 
   RowBox[{"\"\<Type\>\"", "->", "\"\<Block\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.855738511188457*^9, 3.855738513578144*^9}, {
  3.855743192055737*^9, 3.855743194141481*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"bd29d5c6-eb02-4049-ac18-a1f97d963a68"],

Cell[BoxData["\<\"a: b\\nc: \\n  inner1: [Haha, Hoho]\\n  [This, is, a, \
complex, one]: [rhs, result]\\n? e: 4\\n  fg: [123, 456, das]\\n: [1, 2, 3]\"\
\>"], "Output",
 CellChangeTimes->{3.855743194883778*^9, 3.8557433183654537`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"e5046a48-aeb7-4b51-8c5c-38a986b52463"],

Cell[BoxData["\<\"{a: b, c: {inner1: [Haha, Hoho], [This, is, a, complex, \
one]: [rhs, result]}, {e: 4, fg: [123, 456, das]}: [1, 2, 3]}\"\>"], "Output",\

 CellChangeTimes->{3.855743194883778*^9, 3.855743318368231*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"a2438294-02d6-488c-b406-c637a25c883b"],

Cell[BoxData["\<\"a: b\\nc: \\n  inner1: \\n    - Haha\\n    - Hoho\\n  ? - \
This\\n    - is\\n    - a\\n    - complex\\n    - one\\n  : - rhs\\n    - \
result\\n? e: 4\\n  fg: \\n    - 123\\n    - 456\\n    - das\\n: - 1\\n  - \
2\\n  - 3\"\>"], "Output",
 CellChangeTimes->{3.855743194883778*^9, 3.855743318369084*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"11e13681-f536-4659-ba8a-6df63ce9295e"]
}, Open  ]]
},
WindowSize->{960., 1016.25},
WindowMargins->{{Automatic, 0}, {Automatic, 7.5}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"203627ef-aca0-4142-84e1-3aeef914c738"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 223, 3, 29, "Input",ExpressionUUID->"b3da783f-cf60-456a-a8fc-ab53b84796df"],
Cell[784, 25, 11863, 248, 1155, "Code",ExpressionUUID->"ab779459-83dc-4893-8add-151822e21788"],
Cell[CellGroupData[{
Cell[12672, 277, 489, 9, 71, "Input",ExpressionUUID->"fc2c58d2-5832-4f31-a748-21f0c5f3c2ed"],
Cell[13164, 288, 459, 8, 33, "Output",ExpressionUUID->"7b784166-43f5-4f74-a289-5220dfcdaf23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13660, 301, 699, 12, 51, "Input",ExpressionUUID->"8f747bc6-664f-4669-b780-dd7e1c535ca9"],
Cell[14362, 315, 501, 7, 33, "Output",ExpressionUUID->"5b928902-6d97-4bec-a395-ff42cce26c52"],
Cell[14866, 324, 502, 7, 33, "Output",ExpressionUUID->"12b1c7cf-ff2d-4b71-8208-9776fa57dffc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15405, 336, 435, 9, 92, "Input",ExpressionUUID->"18774c29-0fb4-427b-bab5-12d08badc568"],
Cell[15843, 347, 348, 7, 33, "Output",ExpressionUUID->"5295ab24-c195-4a90-aba9-74bbaf5ff4da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16228, 359, 426, 8, 51, "Input",ExpressionUUID->"b2a95797-d28e-4aa9-b384-ed85fb9eed7a"],
Cell[16657, 369, 194, 2, 33, "Output",ExpressionUUID->"7dfa364a-3e32-4091-9bba-eaa1e4ba2e05"],
Cell[16854, 373, 193, 2, 55, "Output",ExpressionUUID->"b12a1b52-fe27-4ed1-aab2-87ed3d687a34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17084, 380, 566, 12, 113, "Input",ExpressionUUID->"1ccc8895-995b-4c67-99ce-4a0acd8e9a9e"],
Cell[17653, 394, 435, 10, 33, "Output",ExpressionUUID->"4d787821-874d-4dbb-8259-664600f21427"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18125, 409, 652, 14, 71, "Input",ExpressionUUID->"e6df4e98-899d-4099-ad66-bf8068b4208d"],
Cell[18780, 425, 204, 2, 75, "Output",ExpressionUUID->"d4d63358-9321-4f42-8163-8b3cafb0aa8d"],
Cell[18987, 429, 204, 2, 33, "Output",ExpressionUUID->"e935030f-a4ea-460f-b332-036971279b63"],
Cell[19194, 433, 218, 2, 137, "Output",ExpressionUUID->"4fb0dfcc-4fe4-4bb9-a2ce-106755903281"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19449, 440, 1065, 26, 113, "Input",ExpressionUUID->"8b4595bb-97fe-446e-80e6-9089cf6fbf15"],
Cell[20517, 468, 930, 22, 33, "Output",ExpressionUUID->"3be51759-2a3b-478a-ac29-c243a7119df4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21484, 495, 603, 13, 71, "Input",ExpressionUUID->"f36c52f2-10bf-46bb-88be-5d80bcbd36c8"],
Cell[22090, 510, 255, 3, 117, "Output",ExpressionUUID->"aa798f6d-63d1-4bf2-afe1-723bba565279"],
Cell[22348, 515, 251, 3, 33, "Output",ExpressionUUID->"c601afea-246e-4fd4-8cce-1bff40d699ab"],
Cell[22602, 520, 330, 4, 343, "Output",ExpressionUUID->"70e36d4e-c05f-4c65-8be0-d1e3c164a3a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22969, 529, 1267, 32, 113, "Input",ExpressionUUID->"ca86817f-0ebd-4b12-8759-e6b79d5c68ed"],
Cell[24239, 563, 1174, 29, 57, "Output",ExpressionUUID->"6742a279-7abb-4cc7-99c5-2bf524eb4081"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25450, 597, 652, 14, 71, "Input",ExpressionUUID->"bd29d5c6-eb02-4049-ac18-a1f97d963a68"],
Cell[26105, 613, 313, 4, 158, "Output",ExpressionUUID->"e5046a48-aeb7-4b51-8c5c-38a986b52463"],
Cell[26421, 619, 299, 4, 55, "Output",ExpressionUUID->"a2438294-02d6-488c-b406-c637a25c883b"],
Cell[26723, 625, 400, 5, 449, "Output",ExpressionUUID->"11e13681-f536-4659-ba8a-6df63ce9295e"]
}, Open  ]]
}
]
*)

